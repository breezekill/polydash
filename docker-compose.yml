# This configuration file is for the **development** setup.
# For a production example please refer to getredash/setup repository on GitHub.
version: "2.2"
x-redash-environment: &redash-environment
  REDASH_LOG_LEVEL: "DEBUG"
  REDASH_REDIS_URL: "redis://redis:6379/0"
  REDASH_DATABASE_URL: "postgresql://postgres@postgres/postgres"
  REDASH_RATELIMIT_ENABLED: "false"
  REDASH_MAIL_DEFAULT_SENDER: "redash@example.com"
  REDASH_MAIL_SERVER: "email"
  REDASH_ENFORCE_CSRF: "true"
  REDASH_MULTI_ORG: "false"
  REDASH_EMBED_URLS_EXPIRED_SECONDS: 10
  REDASH_EMBED_API_ACCESS_TOKEN_TTL: 60
  REDASH_COOKIE_SECRET: "Iegoo2irahRohtieXi7ciCuv8eireij2"
  REDASH_SECRET_KEY: "Iegoo2irahRohtieXi7ciCuv8eireij2"
  REDASH_MICROSOFT_TENANT_ID: "aa5822f5-898e-4310-92bb-5648850ba0e2"
  REDASH_MICROSOFT_CLIENT_ID: "1b8154ae-564a-4534-a7d7-33ec32216230"
  REDASH_MICROSOFT_CLIENT_SECRET: "rpY01Gc3Q8qhBaBKL=fa[MmX=PX.vuq2"
  REDASH_ADDITIONAL_QUERY_RUNNERS: "redash.query_runner.python"
services:
  server:
    image: polydash:1.0.7
    container_name: polydash-server
    command: dev_server
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      <<: *redash-environment
      PYTHONUNBUFFERED: 0
    depends_on:
      - postgres
      - redis
      - worker

  worker:
    image: polydash:1.0.7
    container_name: polydash-worker
    command: dev_worker
    environment:
      <<: *redash-environment
    depends_on:
      - postgres
      - redis

  redis:
    image: redis:3-alpine
    restart: unless-stopped
    container_name: polydash-redis

  postgres:
    image: postgres:9.5-alpine
    container_name: polydash-postgres
    ports:
      - "15432:5432"
    # create_db
    # docker-compose run --rm server create_db
    command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
    restart: unless-stopped
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"